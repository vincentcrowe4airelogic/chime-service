service: chime-service

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  environment:
    APPOINTMENT_TABLE: ${self:service}-${opt:stage, self:provider.stage}-appointments
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
        - chime:CreateMeeting
        - chime:DeleteMeeting
        - chime:GetMeeting
        - chime:ListMeetings
        - chime:CreateAttendee
        - chime:BatchCreateAttendee
        - chime:DeleteAttendee
        - chime:GetAttendee
        - chime:ListAttendees
        - chime:ListAttendeeTags
        - chime:ListMeetingTags
        - chime:ListTagsForResource
        - chime:TagAttendee
        - chime:TagMeeting
        - chime:TagResource
        - chime:UntagAttendee
        - chime:UntagMeeting
        - chime:UntagResource
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - ssm:GetParameter
        - ssm:GetParameters

      Resource: "*"

functions:

  createRoom:
    handler: api/meetingService.createRoom
    memorySize: 128
    description: signs a token that you send it
    events:
      - http:
          path: room
          method: post
          cors: true
  
  joinRoom:
    handler: api/meetingService.joinRoom
    memorySize: 128
    description: signs a token that you send it
    events:
      - http:
          path: join
          method: post
          cors: true

  listRooms:
    handler: api/meetingService.listRooms
    memorySize: 128
    description: signs a token that you send it
    events:
      - http:
          path: rooms
          method: get
          cors: true
  
  createSlot:
    handler: api/slotService.createSlot
    memorySize: 128
    description: create a slot for a subject and host
    events:
      - http:
          path: slot
          method: post
          cors: true
  
  getSlots:
    handler: api/slotService.getSlots
    memorySize: 128
    description: gets a list of slots and states.
    events:
      - http: 
          path: slots
          method: get
          cors: true

  getSlot:
    handler: api/slotService.getSlot
    memorySize: 128
    description: get slot info
    events:
      - http:
          path: slot
          method: get
          cors:
            origin: '*'
            headers: '*'  
  

resources:
  Resources:
    AppointmentsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "ServiceId"
            AttributeType: "S"   
          -
            AttributeName: "Slot"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "ServiceId"
            KeyType: "HASH"
          -
            AttributeName: "Slot"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.APPOINTMENT_TABLE}